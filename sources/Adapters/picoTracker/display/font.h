/*
    MIT License
    Copyright (c) 2018-2019, Alexey Dynda
    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to
   deal in the Software without restriction, including without limitation the
   rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
   sell copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:
    The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED
   "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
   LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
   PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
   ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
   WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
/*
 * ssd1306xled_font6x8 is by Neven Boyanov
 * ssd1306xled_font8x16 is by Neven Boyanov
 *
 * @created: 2014-08-12
 * @author: Neven Boyanov
 *
 * Copyright (c) 2015 Neven Boyanov, Tinusaur Team. All Rights Reserved.
 * Distributed as open source software under MIT License, see LICENSE.txt file.
 * Please, as a favour, retain the link http://tinusaur.org to The Tinusaur
 * Project.
 *
 * Source code available at: https://bitbucket.org/tinusaur/ssd1306xled
 *
 */

/* Source:
 * https://github.com/lexus2k/ssd1306/blob/master/src/ssd1306_fonts.c
 */

#include <stdint.h>

/* Standard ASCII 6x8 font */
const uint8_t font6x8[] = {
    0x00, 0x06, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // sp
    0x00, 0x00, 0x00, 0x2f, 0x00, 0x00,                         // !
    0x00, 0x00, 0x07, 0x00, 0x07, 0x00,                         // "
    0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14,                         // #
    0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12,                         // $
    0x00, 0x23, 0x13, 0x08, 0x64, 0x62,                         // %
    0x00, 0x36, 0x49, 0x55, 0x22, 0x50,                         // &
    0x00, 0x00, 0x05, 0x03, 0x00, 0x00,                         // '
    0x00, 0x00, 0x1c, 0x22, 0x41, 0x00,                         // (
    0x00, 0x00, 0x41, 0x22, 0x1c, 0x00,                         // )
    0x00, 0x14, 0x08, 0x3E, 0x08, 0x14,                         // *
    0x00, 0x08, 0x08, 0x3E, 0x08, 0x08,                         // +
    0x00, 0x00, 0x00, 0xA0, 0x60, 0x00,                         // ,
    0x00, 0x08, 0x08, 0x08, 0x08, 0x08,                         // -
    0x00, 0x00, 0x60, 0x60, 0x00, 0x00,                         // .
    0x00, 0x20, 0x10, 0x08, 0x04, 0x02,                         // /
    0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E,                         // 0
    0x00, 0x00, 0x42, 0x7F, 0x40, 0x00,                         // 1
    0x00, 0x42, 0x61, 0x51, 0x49, 0x46,                         // 2
    0x00, 0x21, 0x41, 0x45, 0x4B, 0x31,                         // 3
    0x00, 0x18, 0x14, 0x12, 0x7F, 0x10,                         // 4
    0x00, 0x27, 0x45, 0x45, 0x45, 0x39,                         // 5
    0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30,                         // 6
    0x00, 0x01, 0x71, 0x09, 0x05, 0x03,                         // 7
    0x00, 0x36, 0x49, 0x49, 0x49, 0x36,                         // 8
    0x00, 0x06, 0x49, 0x49, 0x29, 0x1E,                         // 9
    0x00, 0x00, 0x36, 0x36, 0x00, 0x00,                         // :
    0x00, 0x00, 0x56, 0x36, 0x00, 0x00,                         // ;
    0x00, 0x08, 0x14, 0x22, 0x41, 0x00,                         // <
    0x00, 0x14, 0x14, 0x14, 0x14, 0x14,                         // =
    0x00, 0x00, 0x41, 0x22, 0x14, 0x08,                         // >
    0x00, 0x02, 0x01, 0x51, 0x09, 0x06,                         // ?
    0x00, 0x32, 0x49, 0x59, 0x51, 0x3E,                         // @
    0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C,                         // A
    0x00, 0x7F, 0x49, 0x49, 0x49, 0x36,                         // B
    0x00, 0x3E, 0x41, 0x41, 0x41, 0x22,                         // C
    0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C,                         // D
    0x00, 0x7F, 0x49, 0x49, 0x49, 0x41,                         // E
    0x00, 0x7F, 0x09, 0x09, 0x09, 0x01,                         // F
    0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A,                         // G
    0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F,                         // H
    0x00, 0x00, 0x41, 0x7F, 0x41, 0x00,                         // I
    0x00, 0x20, 0x40, 0x41, 0x3F, 0x01,                         // J
    0x00, 0x7F, 0x08, 0x14, 0x22, 0x41,                         // K
    0x00, 0x7F, 0x40, 0x40, 0x40, 0x40,                         // L
    0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F,                         // M
    0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F,                         // N
    0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E,                         // O
    0x00, 0x7F, 0x09, 0x09, 0x09, 0x06,                         // P
    0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E,                         // Q
    0x00, 0x7F, 0x09, 0x19, 0x29, 0x46,                         // R
    0x00, 0x46, 0x49, 0x49, 0x49, 0x31,                         // S
    0x00, 0x01, 0x01, 0x7F, 0x01, 0x01,                         // T
    0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F,                         // U
    0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F,                         // V
    0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F,                         // W
    0x00, 0x63, 0x14, 0x08, 0x14, 0x63,                         // X
    0x00, 0x07, 0x08, 0x70, 0x08, 0x07,                         // Y
    0x00, 0x61, 0x51, 0x49, 0x45, 0x43,                         // Z
    0x00, 0x00, 0x7F, 0x41, 0x41, 0x00,                         // [
    0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55,                         // 55
    0x00, 0x00, 0x41, 0x41, 0x7F, 0x00,                         // ]
    0x00, 0x04, 0x02, 0x01, 0x02, 0x04,                         // ^
    0x00, 0x40, 0x40, 0x40, 0x40, 0x40,                         // _
    0x00, 0x00, 0x01, 0x02, 0x04, 0x00,                         // '
    0x00, 0x20, 0x54, 0x54, 0x54, 0x78,                         // a
    0x00, 0x7F, 0x48, 0x44, 0x44, 0x38,                         // b
    0x00, 0x38, 0x44, 0x44, 0x44, 0x20,                         // c
    0x00, 0x38, 0x44, 0x44, 0x48, 0x7F,                         // d
    0x00, 0x38, 0x54, 0x54, 0x54, 0x18,                         // e
    0x00, 0x08, 0x7E, 0x09, 0x01, 0x02,                         // f
    0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C,                         // g
    0x00, 0x7F, 0x08, 0x04, 0x04, 0x78,                         // h
    0x00, 0x00, 0x44, 0x7D, 0x40, 0x00,                         // i
    0x00, 0x40, 0x80, 0x84, 0x7D, 0x00,                         // j
    0x00, 0x7F, 0x10, 0x28, 0x44, 0x00,                         // k
    0x00, 0x00, 0x41, 0x7F, 0x40, 0x00,                         // l
    0x00, 0x7C, 0x04, 0x18, 0x04, 0x78,                         // m
    0x00, 0x7C, 0x08, 0x04, 0x04, 0x78,                         // n
    0x00, 0x38, 0x44, 0x44, 0x44, 0x38,                         // o
    0x00, 0xFC, 0x24, 0x24, 0x24, 0x18,                         // p
    0x00, 0x18, 0x24, 0x24, 0x18, 0xFC,                         // q
    0x00, 0x7C, 0x08, 0x04, 0x04, 0x08,                         // r
    0x00, 0x48, 0x54, 0x54, 0x54, 0x20,                         // s
    0x00, 0x04, 0x3F, 0x44, 0x40, 0x20,                         // t
    0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C,                         // u
    0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C,                         // v
    0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C,                         // w
    0x00, 0x44, 0x28, 0x10, 0x28, 0x44,                         // x
    0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C,                         // y
    0x00, 0x44, 0x64, 0x54, 0x4C, 0x44,                         // z
    0x00, 0x00, 0x08, 0x77, 0x00, 0x00,                         // {
    0x00, 0x00, 0x00, 0x7F, 0x00, 0x00,                         // |
    0x00, 0x00, 0x77, 0x08, 0x00, 0x00,                         // }
    0x00, 0x10, 0x08, 0x10, 0x08, 0x00,                         // ~
    0x14, 0x14, 0x14, 0x14, 0x14, 0x14, // horiz lines // DEL
    0x00 /* This byte is required for italic type of font */
};

// Fonts (public domain): https://github.com/dhepper/font8x8
// TODO: optimize by having the characters on a bitstream array already
// like in Adapters/SDL/GUI/SDLGUIWindowImp.cpp
static const uint16_t font8x8[95][10] = {
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00}, // U+0020 (space)
    {0x18, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x00, 0x00, 0x00}, // U+0021 (!)
    {0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0022 (")
    {0x36, 0x36, 0x7F, 0x36, 0x7F, 0x36, 0x36, 0x00, 0x00, 0x00}, // U+0023 (#)
    {0x0C, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x0C, 0x00, 0x00, 0x00}, // U+0024 ($)
    {0x00, 0x63, 0x33, 0x18, 0x0C, 0x66, 0x63, 0x00, 0x00, 0x00}, // U+0025 (%)
    {0x1C, 0x36, 0x1C, 0x6E, 0x3B, 0x33, 0x6E, 0x00, 0x00, 0x00}, // U+0026 (&)
    {0x06, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0027 (')
    {0x18, 0x0C, 0x06, 0x06, 0x06, 0x0C, 0x18, 0x00, 0x00, 0x00}, // U+0028 (()
    {0x06, 0x0C, 0x18, 0x18, 0x18, 0x0C, 0x06, 0x00, 0x00, 0x00}, // U+0029 ())
    {0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00, 0x00, 0x00}, // U+002A (*)
    {0x00, 0x0C, 0x0C, 0x3F, 0x0C, 0x0C, 0x00, 0x00, 0x00, 0x00}, // U+002B (+)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x06, 0x00, 0x00}, // U+002C (,)
    {0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+002D (-)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x00}, // U+002E (.)
    {0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00, 0x00, 0x00}, // U+002F (/)
    {0x3E, 0x63, 0x73, 0x7B, 0x6F, 0x67, 0x3E, 0x00, 0x00, 0x00}, // U+0030 (0)
    {0x0C, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x3F, 0x00, 0x00, 0x00}, // U+0031 (1)
    {0x1E, 0x33, 0x30, 0x1C, 0x06, 0x33, 0x3F, 0x00, 0x00, 0x00}, // U+0032 (2)
    {0x1E, 0x33, 0x30, 0x1C, 0x30, 0x33, 0x1E, 0x00, 0x00, 0x00}, // U+0033 (3)
    {0x38, 0x3C, 0x36, 0x33, 0x7F, 0x30, 0x78, 0x00, 0x00, 0x00}, // U+0034 (4)
    {0x3F, 0x03, 0x1F, 0x30, 0x30, 0x33, 0x1E, 0x00, 0x00, 0x00}, // U+0035 (5)
    {0x1C, 0x06, 0x03, 0x1F, 0x33, 0x33, 0x1E, 0x00, 0x00, 0x00}, // U+0036 (6)
    {0x3F, 0x33, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x00, 0x00, 0x00}, // U+0037 (7)
    {0x1E, 0x33, 0x33, 0x1E, 0x33, 0x33, 0x1E, 0x00, 0x00, 0x00}, // U+0038 (8)
    {0x1E, 0x33, 0x33, 0x3E, 0x30, 0x18, 0x0E, 0x00, 0x00, 0x00}, // U+0039 (9)
    {0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x00}, // U+003A (:)
    {0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x06, 0x00, 0x00}, // U+003B (;)
    {0x18, 0x0C, 0x06, 0x03, 0x06, 0x0C, 0x18, 0x00, 0x00, 0x00}, // U+003C (<)
    {0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00}, // U+003D (=)
    {0x06, 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x06, 0x00, 0x00, 0x00}, // U+003E (>)
    {0x1E, 0x33, 0x30, 0x18, 0x0C, 0x00, 0x0C, 0x00, 0x00, 0x00}, // U+003F (?)
    {0x3E, 0x63, 0x7B, 0x7B, 0x7B, 0x03, 0x1E, 0x00, 0x00, 0x00}, // U+0040 (@)
    {0x0C, 0x1E, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x00, 0x00, 0x00}, // U+0041 (A)
    {0x3F, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x3F, 0x00, 0x00, 0x00}, // U+0042 (B)
    {0x3C, 0x66, 0x03, 0x03, 0x03, 0x66, 0x3C, 0x00, 0x00, 0x00}, // U+0043 (C)
    {0x1F, 0x36, 0x66, 0x66, 0x66, 0x36, 0x1F, 0x00, 0x00, 0x00}, // U+0044 (D)
    {0x7F, 0x46, 0x16, 0x1E, 0x16, 0x46, 0x7F, 0x00, 0x00, 0x00}, // U+0045 (E)
    {0x7F, 0x46, 0x16, 0x1E, 0x16, 0x06, 0x0F, 0x00, 0x00, 0x00}, // U+0046 (F)
    {0x3C, 0x66, 0x03, 0x03, 0x73, 0x66, 0x7C, 0x00, 0x00, 0x00}, // U+0047 (G)
    {0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x00, 0x00, 0x00}, // U+0048 (H)
    {0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00}, // U+0049 (I)
    {0x78, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E, 0x00, 0x00, 0x00}, // U+004A (J)
    {0x67, 0x66, 0x36, 0x1E, 0x36, 0x66, 0x67, 0x00, 0x00, 0x00}, // U+004B (K)
    {0x0F, 0x06, 0x06, 0x06, 0x46, 0x66, 0x7F, 0x00, 0x00, 0x00}, // U+004C (L)
    {0x63, 0x77, 0x7F, 0x7F, 0x6B, 0x63, 0x63, 0x00, 0x00, 0x00}, // U+004D (M)
    {0x63, 0x67, 0x6F, 0x7B, 0x73, 0x63, 0x63, 0x00, 0x00, 0x00}, // U+004E (N)
    {0x1C, 0x36, 0x63, 0x63, 0x63, 0x36, 0x1C, 0x00, 0x00, 0x00}, // U+004F (O)
    {0x3F, 0x66, 0x66, 0x3E, 0x06, 0x06, 0x0F, 0x00, 0x00, 0x00}, // U+0050 (P)
    {0x1E, 0x33, 0x33, 0x33, 0x3B, 0x1E, 0x38, 0x00, 0x00, 0x00}, // U+0051 (Q)
    {0x3F, 0x66, 0x66, 0x3E, 0x36, 0x66, 0x67, 0x00, 0x00, 0x00}, // U+0052 (R)
    {0x1E, 0x33, 0x07, 0x0E, 0x38, 0x33, 0x1E, 0x00, 0x00, 0x00}, // U+0053 (S)
    {0x3F, 0x2D, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00}, // U+0054 (T)
    {0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0x00, 0x00, 0x00}, // U+0055 (U)
    {0x33, 0x33, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00, 0x00, 0x00}, // U+0056 (V)
    {0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63, 0x00, 0x00, 0x00}, // U+0057 (W)
    {0x63, 0x63, 0x36, 0x1C, 0x1C, 0x36, 0x63, 0x00, 0x00, 0x00}, // U+0058 (X)
    {0x33, 0x33, 0x33, 0x1E, 0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00}, // U+0059 (Y)
    {0x7F, 0x63, 0x31, 0x18, 0x4C, 0x66, 0x7F, 0x00, 0x00, 0x00}, // U+005A (Z)
    {0x1E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x1E, 0x00, 0x00, 0x00}, // U+005B ([)
    {0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x40, 0x00, 0x00, 0x00}, // U+005C (\)
    {0x1E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x00, 0x00, 0x00}, // U+005D (])
    {0x08, 0x1C, 0x36, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+005E (^)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00}, // U+005F (_)
    {0x0C, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0060 (`)
    {0x00, 0x00, 0x1E, 0x30, 0x3E, 0x33, 0x6E, 0x00, 0x00, 0x00}, // U+0061 (a)
    {0x07, 0x06, 0x06, 0x3E, 0x66, 0x66, 0x3B, 0x00, 0x00, 0x00}, // U+0062 (b)
    {0x00, 0x00, 0x1E, 0x33, 0x03, 0x33, 0x1E, 0x00, 0x00, 0x00}, // U+0063 (c)
    {0x38, 0x30, 0x30, 0x3e, 0x33, 0x33, 0x6E, 0x00, 0x00, 0x00}, // U+0064 (d)
    {0x00, 0x00, 0x1E, 0x33, 0x3f, 0x03, 0x1E, 0x00, 0x00, 0x00}, // U+0065 (e)
    {0x1C, 0x36, 0x06, 0x0f, 0x06, 0x06, 0x0F, 0x00, 0x00, 0x00}, // U+0066 (f)
    {0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x1F, 0x00, 0x00}, // U+0067 (g)
    {0x07, 0x06, 0x36, 0x6E, 0x66, 0x66, 0x67, 0x00, 0x00, 0x00}, // U+0068 (h)
    {0x0C, 0x00, 0x0E, 0x0C, 0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00}, // U+0069 (i)
    {0x30, 0x00, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E, 0x00, 0x00}, // U+006A (j)
    {0x07, 0x06, 0x66, 0x36, 0x1E, 0x36, 0x67, 0x00, 0x00, 0x00}, // U+006B (k)
    {0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00}, // U+006C (l)
    {0x00, 0x00, 0x33, 0x7F, 0x7F, 0x6B, 0x63, 0x00, 0x00, 0x00}, // U+006D (m)
    {0x00, 0x00, 0x1F, 0x33, 0x33, 0x33, 0x33, 0x00, 0x00, 0x00}, // U+006E (n)
    {0x00, 0x00, 0x1E, 0x33, 0x33, 0x33, 0x1E, 0x00, 0x00, 0x00}, // U+006F (o)
    {0x00, 0x00, 0x3B, 0x66, 0x66, 0x3E, 0x06, 0x0F, 0x00, 0x00}, // U+0070 (p)
    {0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x78, 0x00, 0x00}, // U+0071 (q)
    {0x00, 0x00, 0x3B, 0x6E, 0x66, 0x06, 0x0F, 0x00, 0x00, 0x00}, // U+0072 (r)
    {0x00, 0x00, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x00, 0x00, 0x00}, // U+0073 (s)
    {0x08, 0x0C, 0x3E, 0x0C, 0x0C, 0x2C, 0x18, 0x00, 0x00, 0x00}, // U+0074 (t)
    {0x00, 0x00, 0x33, 0x33, 0x33, 0x33, 0x6E, 0x00, 0x00, 0x00}, // U+0075 (u)
    {0x00, 0x00, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00, 0x00, 0x00}, // U+0076 (v)
    {0x00, 0x00, 0x63, 0x6B, 0x7F, 0x7F, 0x36, 0x00, 0x00, 0x00}, // U+0077 (w)
    {0x00, 0x00, 0x63, 0x36, 0x1C, 0x36, 0x63, 0x00, 0x00, 0x00}, // U+0078 (x)
    {0x00, 0x00, 0x33, 0x33, 0x33, 0x3E, 0x30, 0x1F, 0x00, 0x00}, // U+0079 (y)
    {0x00, 0x00, 0x3F, 0x19, 0x0C, 0x26, 0x3F, 0x00, 0x00, 0x00}, // U+007A (z)
    {0x38, 0x0C, 0x0C, 0x07, 0x0C, 0x0C, 0x38, 0x00, 0x00, 0x00}, // U+007B ({)
    {0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00}, // U+007C (|)
    {0x07, 0x0C, 0x0C, 0x38, 0x0C, 0x0C, 0x07, 0x00, 0x00, 0x00}, // U+007D (})
    {0x6E, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+007E (~)
};

// Same font as above but formatted to be displaced 1 bit right and down
// Intended to be used on a 10x10 grid and have at least 1px free in each
// direction
static const uint16_t font8x8shift[95][10] = {
    {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+0020 (space)
    {0x0000, 0x0030, 0x0078, 0x0078, 0x0030, 0x0030, 0x0000, 0x0030, 0x0000,
     0x0000}, // U+0021 (!)
    {0x0000, 0x006C, 0x006C, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+0022 (")
    {0x0000, 0x006C, 0x006C, 0x00FE, 0x006C, 0x00FE, 0x006C, 0x006C, 0x0000,
     0x0000}, // U+0023 (#)
    {0x0000, 0x0018, 0x007C, 0x0006, 0x003C, 0x0060, 0x003E, 0x0018, 0x0000,
     0x0000}, // U+0024 ($)
    {0x0000, 0x0000, 0x00C6, 0x0066, 0x0030, 0x0018, 0x00CC, 0x00C6, 0x0000,
     0x0000}, // U+0025 (%)
    {0x0000, 0x0038, 0x006C, 0x0038, 0x00DC, 0x0076, 0x0066, 0x00DC, 0x0000,
     0x0000}, // U+0026 (&)
    {0x0000, 0x000C, 0x000C, 0x0006, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+0027 (')
    {0x0000, 0x0030, 0x0018, 0x000C, 0x000C, 0x000C, 0x0018, 0x0030, 0x0000,
     0x0000}, // U+0028 (()
    {0x0000, 0x000C, 0x0018, 0x0030, 0x0030, 0x0030, 0x0018, 0x000C, 0x0000,
     0x0000}, // U+0029 ())
    {0x0000, 0x0000, 0x00CC, 0x0078, 0x01FE, 0x0078, 0x00CC, 0x0000, 0x0000,
     0x0000}, // U+002A (*)
    {0x0000, 0x0000, 0x0018, 0x0018, 0x007E, 0x0018, 0x0018, 0x0000, 0x0000,
     0x0000}, // U+002B (+)
    {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0018, 0x0018, 0x000C,
     0x0000}, // U+002C (
    {0x0000, 0x0000, 0x0000, 0x0000, 0x007E, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+002D (-)
    {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0018, 0x0018, 0x0000,
     0x0000}, // U+002E (.)
    {0x0000, 0x00C0, 0x0060, 0x0030, 0x0018, 0x000C, 0x0006, 0x0002, 0x0000,
     0x0000}, // U+002F (/)
    {0x0000, 0x007C, 0x00C6, 0x00E6, 0x00F6, 0x00DE, 0x00CE, 0x007C, 0x0000,
     0x0000}, // U+0030 (0)
    {0x0000, 0x0018, 0x001C, 0x0018, 0x0018, 0x0018, 0x0018, 0x007E, 0x0000,
     0x0000}, // U+0031 (1)
    {0x0000, 0x003C, 0x0066, 0x0060, 0x0038, 0x000C, 0x0066, 0x007E, 0x0000,
     0x0000}, // U+0032 (2)
    {0x0000, 0x003C, 0x0066, 0x0060, 0x0038, 0x0060, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+0033 (3)
    {0x0000, 0x0070, 0x0078, 0x006C, 0x0066, 0x00FE, 0x0060, 0x00F0, 0x0000,
     0x0000}, // U+0034 (4)
    {0x0000, 0x007E, 0x0006, 0x003E, 0x0060, 0x0060, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+0035 (5)
    {0x0000, 0x0038, 0x000C, 0x0006, 0x003E, 0x0066, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+0036 (6)
    {0x0000, 0x007E, 0x0066, 0x0060, 0x0030, 0x0018, 0x0018, 0x0018, 0x0000,
     0x0000}, // U+0037 (7)
    {0x0000, 0x003C, 0x0066, 0x0066, 0x003C, 0x0066, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+0038 (8)
    {0x0000, 0x003C, 0x0066, 0x0066, 0x007C, 0x0060, 0x0030, 0x001C, 0x0000,
     0x0000}, // U+0039 (9)
    {0x0000, 0x0000, 0x0018, 0x0018, 0x0000, 0x0000, 0x0018, 0x0018, 0x0000,
     0x0000}, // U+003A (:)
    {0x0000, 0x0000, 0x0018, 0x0018, 0x0000, 0x0000, 0x0018, 0x0018, 0x000C,
     0x0000}, // U+003B (;)
    {0x0000, 0x0030, 0x0018, 0x000C, 0x0006, 0x000C, 0x0018, 0x0030, 0x0000,
     0x0000}, // U+003C (<)
    {0x0000, 0x0000, 0x0000, 0x007E, 0x0000, 0x0000, 0x007E, 0x0000, 0x0000,
     0x0000}, // U+003D (=)
    {0x0000, 0x000C, 0x0018, 0x0030, 0x0060, 0x0030, 0x0018, 0x000C, 0x0000,
     0x0000}, // U+003E (>)
    {0x0000, 0x003C, 0x0066, 0x0060, 0x0030, 0x0018, 0x0000, 0x0018, 0x0000,
     0x0000}, // U+003F (?)
    {0x0000, 0x007C, 0x00C6, 0x00F6, 0x00F6, 0x00F6, 0x0006, 0x003C, 0x0000,
     0x0000}, // U+0040 (@)
    {0x0000, 0x0018, 0x003C, 0x0066, 0x0066, 0x007E, 0x0066, 0x0066, 0x0000,
     0x0000}, // U+0041 (A)
    {0x0000, 0x007E, 0x00CC, 0x00CC, 0x007C, 0x00CC, 0x00CC, 0x007E, 0x0000,
     0x0000}, // U+0042 (B)
    {0x0000, 0x0078, 0x00CC, 0x0006, 0x0006, 0x0006, 0x00CC, 0x0078, 0x0000,
     0x0000}, // U+0043 (C)
    {0x0000, 0x003E, 0x006C, 0x00CC, 0x00CC, 0x00CC, 0x006C, 0x003E, 0x0000,
     0x0000}, // U+0044 (D)
    {0x0000, 0x00FE, 0x008C, 0x002C, 0x003C, 0x002C, 0x008C, 0x00FE, 0x0000,
     0x0000}, // U+0045 (E)
    {0x0000, 0x00FE, 0x008C, 0x002C, 0x003C, 0x002C, 0x000C, 0x001E, 0x0000,
     0x0000}, // U+0046 (F)
    {0x0000, 0x0078, 0x00CC, 0x0006, 0x0006, 0x00E6, 0x00CC, 0x00F8, 0x0000,
     0x0000}, // U+0047 (G)
    {0x0000, 0x0066, 0x0066, 0x0066, 0x007E, 0x0066, 0x0066, 0x0066, 0x0000,
     0x0000}, // U+0048 (H)
    {0x0000, 0x003C, 0x0018, 0x0018, 0x0018, 0x0018, 0x0018, 0x003C, 0x0000,
     0x0000}, // U+0049 (I)
    {0x0000, 0x00F0, 0x0060, 0x0060, 0x0060, 0x0066, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+004A (J)
    {0x0000, 0x00CE, 0x00CC, 0x006C, 0x003C, 0x006C, 0x00CC, 0x00CE, 0x0000,
     0x0000}, // U+004B (K)
    {0x0000, 0x001E, 0x000C, 0x000C, 0x000C, 0x008C, 0x00CC, 0x00FE, 0x0000,
     0x0000}, // U+004C (L)
    {0x0000, 0x00C6, 0x00EE, 0x00FE, 0x00FE, 0x00D6, 0x00C6, 0x00C6, 0x0000,
     0x0000}, // U+004D (M)
    {0x0000, 0x00C6, 0x00CE, 0x00DE, 0x00F6, 0x00E6, 0x00C6, 0x00C6, 0x0000,
     0x0000}, // U+004E (N)
    {0x0000, 0x0038, 0x006C, 0x00C6, 0x00C6, 0x00C6, 0x006C, 0x0038, 0x0000,
     0x0000}, // U+004F (O)
    {0x0000, 0x007E, 0x00CC, 0x00CC, 0x007C, 0x000C, 0x000C, 0x001E, 0x0000,
     0x0000}, // U+0050 (P)
    {0x0000, 0x003C, 0x0066, 0x0066, 0x0066, 0x0076, 0x003C, 0x0070, 0x0000,
     0x0000}, // U+0051 (Q)
    {0x0000, 0x007E, 0x00CC, 0x00CC, 0x007C, 0x006C, 0x00CC, 0x00CE, 0x0000,
     0x0000}, // U+0052 (R)
    {0x0000, 0x003C, 0x0066, 0x000E, 0x001C, 0x0070, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+0053 (S)
    {0x0000, 0x007E, 0x005A, 0x0018, 0x0018, 0x0018, 0x0018, 0x003C, 0x0000,
     0x0000}, // U+0054 (T)
    {0x0000, 0x0066, 0x0066, 0x0066, 0x0066, 0x0066, 0x0066, 0x007E, 0x0000,
     0x0000}, // U+0055 (U)
    {0x0000, 0x0066, 0x0066, 0x0066, 0x0066, 0x0066, 0x003C, 0x0018, 0x0000,
     0x0000}, // U+0056 (V)
    {0x0000, 0x00C6, 0x00C6, 0x00C6, 0x00D6, 0x00FE, 0x00EE, 0x00C6, 0x0000,
     0x0000}, // U+0057 (W)
    {0x0000, 0x00C6, 0x00C6, 0x006C, 0x0038, 0x0038, 0x006C, 0x00C6, 0x0000,
     0x0000}, // U+0058 (X)
    {0x0000, 0x0066, 0x0066, 0x0066, 0x003C, 0x0018, 0x0018, 0x003C, 0x0000,
     0x0000}, // U+0059 (Y)
    {0x0000, 0x00FE, 0x00C6, 0x0062, 0x0030, 0x0098, 0x00CC, 0x00FE, 0x0000,
     0x0000}, // U+005A (Z)
    {0x0000, 0x003C, 0x000C, 0x000C, 0x000C, 0x000C, 0x000C, 0x003C, 0x0000,
     0x0000}, // U+005B ([)
    {0x0000, 0x0006, 0x000C, 0x0018, 0x0030, 0x0060, 0x00C0, 0x0080, 0x0000,
     0x0000}, // U+005C (\)
    {0x0000, 0x003C, 0x0030, 0x0030, 0x0030, 0x0030, 0x0030, 0x003C, 0x0000,
     0x0000}, // U+005D (])
    {0x0000, 0x0010, 0x0038, 0x006C, 0x00C6, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+005E (^)
    {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x01FE,
     0x0000}, // U+005F (_)
    {0x0000, 0x0018, 0x0018, 0x0030, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+0060 (`)
    {0x0000, 0x0000, 0x0000, 0x003C, 0x0060, 0x007C, 0x0066, 0x00DC, 0x0000,
     0x0000}, // U+0061 (a)
    {0x0000, 0x000E, 0x000C, 0x000C, 0x007C, 0x00CC, 0x00CC, 0x0076, 0x0000,
     0x0000}, // U+0062 (b)
    {0x0000, 0x0000, 0x0000, 0x003C, 0x0066, 0x0006, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+0063 (c)
    {0x0000, 0x0070, 0x0060, 0x0060, 0x007C, 0x0066, 0x0066, 0x00DC, 0x0000,
     0x0000}, // U+0064 (d)
    {0x0000, 0x0000, 0x0000, 0x003C, 0x0066, 0x007E, 0x0006, 0x003C, 0x0000,
     0x0000}, // U+0065 (e)
    {0x0000, 0x0038, 0x006C, 0x000C, 0x001E, 0x000C, 0x000C, 0x001E, 0x0000,
     0x0000}, // U+0066 (f)
    {0x0000, 0x0000, 0x0000, 0x00DC, 0x0066, 0x0066, 0x007C, 0x0060, 0x003E,
     0x0000}, // U+0067 (g)
    {0x0000, 0x000E, 0x000C, 0x006C, 0x00DC, 0x00CC, 0x00CC, 0x00CE, 0x0000,
     0x0000}, // U+0068 (h)
    {0x0000, 0x0018, 0x0000, 0x001C, 0x0018, 0x0018, 0x0018, 0x003C, 0x0000,
     0x0000}, // U+0069 (i)
    {0x0000, 0x0060, 0x0000, 0x0060, 0x0060, 0x0060, 0x0066, 0x0066, 0x003C,
     0x0000}, // U+006A (j)
    {0x0000, 0x000E, 0x000C, 0x00CC, 0x006C, 0x003C, 0x006C, 0x00CE, 0x0000,
     0x0000}, // U+006B (k)
    {0x0000, 0x001C, 0x0018, 0x0018, 0x0018, 0x0018, 0x0018, 0x003C, 0x0000,
     0x0000}, // U+006C (l)
    {0x0000, 0x0000, 0x0000, 0x0066, 0x00FE, 0x00FE, 0x00D6, 0x00C6, 0x0000,
     0x0000}, // U+006D (m)
    {0x0000, 0x0000, 0x0000, 0x003E, 0x0066, 0x0066, 0x0066, 0x0066, 0x0000,
     0x0000}, // U+006E (n)
    {0x0000, 0x0000, 0x0000, 0x003C, 0x0066, 0x0066, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+006F (o)
    {0x0000, 0x0000, 0x0000, 0x0076, 0x00CC, 0x00CC, 0x007C, 0x000C, 0x001E,
     0x0000}, // U+0070 (p)
    {0x0000, 0x0000, 0x0000, 0x00DC, 0x0066, 0x0066, 0x007C, 0x0060, 0x00F0,
     0x0000}, // U+0071 (q)
    {0x0000, 0x0000, 0x0000, 0x0076, 0x00DC, 0x00CC, 0x000C, 0x001E, 0x0000,
     0x0000}, // U+0072 (r)
    {0x0000, 0x0000, 0x0000, 0x007C, 0x0006, 0x003C, 0x0060, 0x003E, 0x0000,
     0x0000}, // U+0073 (s)
    {0x0000, 0x0010, 0x0018, 0x007C, 0x0018, 0x0018, 0x0058, 0x0030, 0x0000,
     0x0000}, // U+0074 (t)
    {0x0000, 0x0000, 0x0000, 0x0066, 0x0066, 0x0066, 0x0066, 0x00DC, 0x0000,
     0x0000}, // U+0075 (u)
    {0x0000, 0x0000, 0x0000, 0x0066, 0x0066, 0x0066, 0x003C, 0x0018, 0x0000,
     0x0000}, // U+0076 (v)
    {0x0000, 0x0000, 0x0000, 0x00C6, 0x00D6, 0x00FE, 0x00FE, 0x006C, 0x0000,
     0x0000}, // U+0077 (w)
    {0x0000, 0x0000, 0x0000, 0x00C6, 0x006C, 0x0038, 0x006C, 0x00C6, 0x0000,
     0x0000}, // U+0078 (x)
    {0x0000, 0x0000, 0x0000, 0x0066, 0x0066, 0x0066, 0x007C, 0x0060, 0x003E,
     0x0000}, // U+0079 (y)
    {0x0000, 0x0000, 0x0000, 0x007E, 0x0032, 0x0018, 0x004C, 0x007E, 0x0000,
     0x0000}, // U+007A (z)
    {0x0000, 0x0070, 0x0018, 0x0018, 0x000E, 0x0018, 0x0018, 0x0070, 0x0000,
     0x0000}, // U+007B ({)
    {0x0000, 0x0030, 0x0030, 0x0030, 0x0000, 0x0030, 0x0030, 0x0030, 0x0000,
     0x0000}, // U+007C (|)
    {0x0000, 0x000E, 0x0018, 0x0018, 0x0070, 0x0018, 0x0018, 0x000E, 0x0000,
     0x0000}, // U+007D (})
    {0x0000, 0x00DC, 0x0076, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+007E (~)
};

static const uint16_t font9x9[95][10] = {
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00}, // U+0020 (space)
    {0x18, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x00, 0x00, 0x00}, // U+0021 (!)
    {0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0022 (")
    {0x36, 0x36, 0x7F, 0x36, 0x7F, 0x36, 0x36, 0x00, 0x00, 0x00}, // U+0023 (#)
    {0x0C, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x0C, 0x00, 0x00, 0x00}, // U+0024 ($)
    {0x00, 0x63, 0x33, 0x18, 0x0C, 0x66, 0x63, 0x00, 0x00, 0x00}, // U+0025 (%)
    {0x1C, 0x36, 0x1C, 0x6E, 0x3B, 0x33, 0x6E, 0x00, 0x00, 0x00}, // U+0026 (&)
    {0x06, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0027 (')
    {0x18, 0x0C, 0x06, 0x06, 0x06, 0x0C, 0x18, 0x00, 0x00, 0x00}, // U+0028 (()
    {0x06, 0x0C, 0x18, 0x18, 0x18, 0x0C, 0x06, 0x00, 0x00, 0x00}, // U+0029 ())
    {0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00, 0x00, 0x00}, // U+002A (*)
    {0x00, 0x0C, 0x0C, 0x3F, 0x0C, 0x0C, 0x00, 0x00, 0x00, 0x00}, // U+002B (+)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x06, 0x00, 0x00}, // U+002C (,)
    {0x0000, 0x0000, 0x0000, 0x0000, 0x01FF, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000},                                                     // U+002D (-)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x00}, // U+002E (.)
    {0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00, 0x00, 0x00}, // U+002F (/)
    {0x00FE, 0x01C7, 0x01E7, 0x01F7, 0x01FF, 0x01DF, 0x01CF, 0x01C7, 0x00FE,
     0x0000}, // U+0030 (0)
    {0x0038, 0x00F8, 0x0038, 0x0038, 0x0038, 0x0038, 0x0038, 0x0038, 0x01FF,
     0x0000}, // U+0031 (1)
    {0x00FE, 0x01C7, 0x01C0, 0x00E0, 0x0070, 0x0038, 0x001C, 0x000E, 0x01FF,
     0x0000}, // U+0032 (2)
    {0x00FE, 0x01C7, 0x0038, 0x0038, 0x00F8, 0x0038, 0x0038, 0x01C7, 0x00FE,
     0x0000}, // U+0033 (3)
    {0x00F0, 0x00F8, 0x00FC, 0x00EE, 0x00E7, 0x01FF, 0x00E0, 0x00E0, 0x00E0,
     0x0000}, // U+0034 (4)
    {0x01FF, 0x0007, 0x0007, 0x0007, 0x00FF, 0x01C0, 0x01C0, 0x01C7, 0x00FE,
     0x0000}, // U+0035 (5)
    {0x01F8, 0x001C, 0x000E, 0x0007, 0x00FF, 0x01C7, 0x01C7, 0x01C7, 0x00FE,
     0x0000}, // U+0036 (6)
    {0x01FF, 0x01C7, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x00, 0x00,
     0x00},                                                       // U+0037 (7)
    {0x1E, 0x33, 0x33, 0x1E, 0x33, 0x33, 0x1E, 0x00, 0x00, 0x00}, // U+0038 (8)
    {0x1E, 0x33, 0x33, 0x3E, 0x30, 0x18, 0x0E, 0x00, 0x00, 0x00}, // U+0039 (9)
    {0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x00}, // U+003A (:)
    {0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x06, 0x00, 0x00}, // U+003B (;)
    {0x18, 0x0C, 0x06, 0x03, 0x06, 0x0C, 0x18, 0x00, 0x00, 0x00}, // U+003C (<)
    {0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00}, // U+003D (=)
    {0x06, 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x06, 0x00, 0x00, 0x00}, // U+003E (>)
    {0x1E, 0x33, 0x30, 0x18, 0x0C, 0x00, 0x0C, 0x00, 0x00, 0x00}, // U+003F (?)
    {0x3E, 0x63, 0x7B, 0x7B, 0x7B, 0x03, 0x1E, 0x00, 0x00, 0x00}, // U+0040 (@)
    {0x0C, 0x1E, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x00, 0x00, 0x00}, // U+0041 (A)
    {0x3F, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x3F, 0x00, 0x00, 0x00}, // U+0042 (B)
    {0x3C, 0x66, 0x03, 0x03, 0x03, 0x66, 0x3C, 0x00, 0x00, 0x00}, // U+0043 (C)
    {0x1F, 0x36, 0x66, 0x66, 0x66, 0x36, 0x1F, 0x00, 0x00, 0x00}, // U+0044 (D)
    {0x7F, 0x46, 0x16, 0x1E, 0x16, 0x46, 0x7F, 0x00, 0x00, 0x00}, // U+0045 (E)
    {0x7F, 0x46, 0x16, 0x1E, 0x16, 0x06, 0x0F, 0x00, 0x00, 0x00}, // U+0046 (F)
    {0x3C, 0x66, 0x03, 0x03, 0x73, 0x66, 0x7C, 0x00, 0x00, 0x00}, // U+0047 (G)
    {0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x00, 0x00, 0x00}, // U+0048 (H)
    {0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00}, // U+0049 (I)
    {0x78, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E, 0x00, 0x00, 0x00}, // U+004A (J)
    {0x67, 0x66, 0x36, 0x1E, 0x36, 0x66, 0x67, 0x00, 0x00, 0x00}, // U+004B (K)
    {0x0F, 0x06, 0x06, 0x06, 0x46, 0x66, 0x7F, 0x00, 0x00, 0x00}, // U+004C (L)
    {0x63, 0x77, 0x7F, 0x7F, 0x6B, 0x63, 0x63, 0x00, 0x00, 0x00}, // U+004D (M)
    {0x63, 0x67, 0x6F, 0x7B, 0x73, 0x63, 0x63, 0x00, 0x00, 0x00}, // U+004E (N)
    {0x1C, 0x36, 0x63, 0x63, 0x63, 0x36, 0x1C, 0x00, 0x00, 0x00}, // U+004F (O)
    {0x3F, 0x66, 0x66, 0x3E, 0x06, 0x06, 0x0F, 0x00, 0x00, 0x00}, // U+0050 (P)
    {0x1E, 0x33, 0x33, 0x33, 0x3B, 0x1E, 0x38, 0x00, 0x00, 0x00}, // U+0051 (Q)
    {0x3F, 0x66, 0x66, 0x3E, 0x36, 0x66, 0x67, 0x00, 0x00, 0x00}, // U+0052 (R)
    {0x1E, 0x33, 0x07, 0x0E, 0x38, 0x33, 0x1E, 0x00, 0x00, 0x00}, // U+0053 (S)
    {0x3F, 0x2D, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00}, // U+0054 (T)
    {0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0x00, 0x00, 0x00}, // U+0055 (U)
    {0x33, 0x33, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00, 0x00, 0x00}, // U+0056 (V)
    {0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63, 0x00, 0x00, 0x00}, // U+0057 (W)
    {0x63, 0x63, 0x36, 0x1C, 0x1C, 0x36, 0x63, 0x00, 0x00, 0x00}, // U+0058 (X)
    {0x33, 0x33, 0x33, 0x1E, 0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00}, // U+0059 (Y)
    {0x7F, 0x63, 0x31, 0x18, 0x4C, 0x66, 0x7F, 0x00, 0x00, 0x00}, // U+005A (Z)
    {0x1E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x1E, 0x00, 0x00, 0x00}, // U+005B ([)
    {0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x40, 0x00, 0x00, 0x00}, // U+005C (\)
    {0x1E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x00, 0x00, 0x00}, // U+005D (])
    {0x08, 0x1C, 0x36, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+005E (^)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00}, // U+005F (_)
    {0x0C, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0060 (`)
    {0x00, 0x00, 0x1E, 0x30, 0x3E, 0x33, 0x6E, 0x00, 0x00, 0x00}, // U+0061 (a)
    {0x07, 0x06, 0x06, 0x3E, 0x66, 0x66, 0x3B, 0x00, 0x00, 0x00}, // U+0062 (b)
    {0x00, 0x00, 0x1E, 0x33, 0x03, 0x33, 0x1E, 0x00, 0x00, 0x00}, // U+0063 (c)
    {0x38, 0x30, 0x30, 0x3e, 0x33, 0x33, 0x6E, 0x00, 0x00, 0x00}, // U+0064 (d)
    {0x00, 0x00, 0x1E, 0x33, 0x3f, 0x03, 0x1E, 0x00, 0x00, 0x00}, // U+0065 (e)
    {0x1C, 0x36, 0x06, 0x0f, 0x06, 0x06, 0x0F, 0x00, 0x00, 0x00}, // U+0066 (f)
    {0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x1F, 0x00, 0x00}, // U+0067 (g)
    {0x07, 0x06, 0x36, 0x6E, 0x66, 0x66, 0x67, 0x00, 0x00, 0x00}, // U+0068 (h)
    {0x0C, 0x00, 0x0E, 0x0C, 0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00}, // U+0069 (i)
    {0x30, 0x00, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E, 0x00, 0x00}, // U+006A (j)
    {0x07, 0x06, 0x66, 0x36, 0x1E, 0x36, 0x67, 0x00, 0x00, 0x00}, // U+006B (k)
    {0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00}, // U+006C (l)
    {0x00, 0x00, 0x33, 0x7F, 0x7F, 0x6B, 0x63, 0x00, 0x00, 0x00}, // U+006D (m)
    {0x00, 0x00, 0x1F, 0x33, 0x33, 0x33, 0x33, 0x00, 0x00, 0x00}, // U+006E (n)
    {0x00, 0x00, 0x1E, 0x33, 0x33, 0x33, 0x1E, 0x00, 0x00, 0x00}, // U+006F (o)
    {0x00, 0x00, 0x3B, 0x66, 0x66, 0x3E, 0x06, 0x0F, 0x00, 0x00}, // U+0070 (p)
    {0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x78, 0x00, 0x00}, // U+0071 (q)
    {0x00, 0x00, 0x3B, 0x6E, 0x66, 0x06, 0x0F, 0x00, 0x00, 0x00}, // U+0072 (r)
    {0x00, 0x00, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x00, 0x00, 0x00}, // U+0073 (s)
    {0x08, 0x0C, 0x3E, 0x0C, 0x0C, 0x2C, 0x18, 0x00, 0x00, 0x00}, // U+0074 (t)
    {0x00, 0x00, 0x33, 0x33, 0x33, 0x33, 0x6E, 0x00, 0x00, 0x00}, // U+0075 (u)
    {0x00, 0x00, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00, 0x00, 0x00}, // U+0076 (v)
    {0x00, 0x00, 0x63, 0x6B, 0x7F, 0x7F, 0x36, 0x00, 0x00, 0x00}, // U+0077 (w)
    {0x00, 0x00, 0x63, 0x36, 0x1C, 0x36, 0x63, 0x00, 0x00, 0x00}, // U+0078 (x)
    {0x00, 0x00, 0x33, 0x33, 0x33, 0x3E, 0x30, 0x1F, 0x00, 0x00}, // U+0079 (y)
    {0x00, 0x00, 0x3F, 0x19, 0x0C, 0x26, 0x3F, 0x00, 0x00, 0x00}, // U+007A (z)
    {0x38, 0x0C, 0x0C, 0x07, 0x0C, 0x0C, 0x38, 0x00, 0x00, 0x00}, // U+007B ({)
    {0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00}, // U+007C (|)
    {0x07, 0x0C, 0x0C, 0x38, 0x0C, 0x0C, 0x07, 0x00, 0x00, 0x00}, // U+007D (})
    {0x6E, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+007E (~)
};
